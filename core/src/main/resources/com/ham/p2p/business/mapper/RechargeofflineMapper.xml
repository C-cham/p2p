<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ham.p2p.business.mapper.RechargeOfflineMapper">
    <resultMap id="BaseResultMap" type="com.ham.p2p.business.domain.RechargeOffline">
        <id column="id" property="id"/>
        <result column="state" property="state"/>
        <result column="remark" property="remark"/>
        <result column="auditTime" property="auditTime"/>
        <result column="applyTime" property="applyTime"/>

        <result column="tradeCode" property="tradeCode"/>
        <result column="tradeTime" property="tradeTime"/>
        <result column="amount" property="amount"/>
        <result column="note" property="note"/>
        <association property="applier" javaType="com.ham.p2p.base.domain.Logininfo" columnPrefix="ap_">
            <id property="id" column="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="auditor" javaType="com.ham.p2p.base.domain.Logininfo" columnPrefix="au_">
            <id property="id" column="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="bankInfo" javaType="com.ham.p2p.business.domain.PlatFormBankInfo" columnPrefix="bank_">
            <id property="id" column="id"/>
            <result column="bankName" property="bankName"/>
            <result column="accountName" property="accountName"/>
            <result column="accountNumber" property="accountNumber"/>
            <result column="bankForkName" property="bankForkName"/>
        </association>
    </resultMap>

    <insert id="insert" parameterType="com.ham.p2p.business.domain.RechargeOffline" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO rechargeoffline (state, remark, auditTime, applyTime, auditor_id, applier_id,
                                     tradeCode, tradeTime, amount, note, bankinfo_id)
        VALUES (#{state}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id},
                          #{tradeCode}, #{tradeTime}, #{amount}, #{note}, #{bankInfo.id})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ham.p2p.business.domain.RechargeOffline">
        UPDATE rechargeoffline
        SET state       = #{state},
            remark      = #{remark},
            auditTime   = #{auditTime},
            applyTime   = #{applyTime},
            auditor_id  = #{auditor.id},
            applier_id  = #{applier.id},
            tradeCode   = #{tradeCode},
            tradeTime   = #{tradeTime},
            amount      = #{amount},
            note        = #{note},
            bankinfo_id = #{bankInfo.id}
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            ro.id,
            ro.state,
            ro.remark,
            ro.auditTime,
            ro.applyTime,
            ro.tradeCode,
            ro.tradeTime,
            ro.amount,
            ro.note,
            ro.bankinfo_id,
            ap.id              ap_id,
            ap.username        ap_username,
            au.id              au_id,
            au.username        au_username,
            bank.id            bank_id,
            bank.bankName      bank_bankName,
            bank.accountName   bank_accountName,
            bank.accountNumber bank_accountNumber,
            bank.bankForkName  bank_bankForkName
        FROM rechargeoffline ro
            JOIN logininfo ap ON ro.applier_id = ap.id
            LEFT JOIN logininfo au ON ro.auditor_id = au.id
            LEFT JOIN platformbankinfo bank ON ro.bankinfo_id = bank.id
        WHERE ro.id = #{id}
    </select>
    <select id="queryPage" resultMap="BaseResultMap">
        SELECT
        ro.id,
        ro.state,
        ro.remark,
        ro.auditTime,
        ro.applyTime,
        ro.tradeCode,
        ro.tradeTime,
        ro.amount,
        ro.note,
        ro.bankinfo_id,
        ap.id ap_id,
        ap.username ap_username,
        au.id au_id,
        au.username au_username,
        bank.id bank_id,
        bank.bankName bank_bankName,
        bank.accountName bank_accountName,
        bank.accountNumber bank_accountNumber,
        bank.bankForkName bank_bankForkName
        FROM rechargeoffline ro
        JOIN logininfo ap ON ro.applier_id = ap.id
        LEFT JOIN logininfo au ON ro.auditor_id = au.id
        LEFT JOIN platformbankinfo bank ON ro.bankinfo_id = bank.id
        <include refid="base_where"/>
    </select>
    <sql id="base_where">
        <where></where>
    </sql>
</mapper>